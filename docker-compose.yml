version: '3'

services:
  user:
    container_name: user
    build:
      context: .
      dockerfile: ./Dockerfile
    command: npm run start:user
    ports:
      - 3000:3000
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    restart: unless-stopped
    networks:
      - apps-network
    links:
      - mysql_user
    depends_on:
      - mysql_user
  mysql_user:
    container_name: mysql_user
    restart: always
    image: mysql:8.0
    # command: mysqld --default-authentication-plugin=mysql_native_password
    ports:
      - 33306:3306
    volumes:
      - data-mysql-user:/var/lib/mysql
    environment:
      - MYSQL_DATABASE=users
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_PASSWORD=root
    networks:
      - apps-network
  auth:
    container_name: auth
    build:
      context: .
      dockerfile: ./Dockerfile
    command: npm run start:auth
    ports:
      - 3001:3001
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    restart: unless-stopped
    networks:
      - apps-network
  # elastic_search:
  #   image: docker.elastic.co/elasticsearch/elasticsearch:7.16.3
  #   container_name: elastic_search
  #   environment:
  #     - node.name=elastic_search
  #     - cluster.name=es-docker-cluster
  #     # - discovery.seed_hosts=elastic_search02
  #     - cluster.initial_master_nodes=elastic_search
  #     - bootstrap.memory_lock=true
  #     # - enforce.bootstrap.checks=true
  #     # - discovery.type=single-node
  #     - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
  #     # - "ES_JAVA_OPTS=-Xms512m -Xmx512m -Des.enforce.bootstrap.checks=true"
  #     - ELASTIC_USERNAME=elastic
  #     - ELASTIC_PASSWORD=admin
  #   ulimits:
  #     memlock:
  #       soft: -1
  #       hard: -1
  #   volumes:
  #     - data-elastic-search:/usr/share/elasticsearch/data
  #   ports:
  #     - 9200:9200
  #   networks:
  #     - apps-network

volumes:
  data-mysql-user:
  data-elastic-search:

networks:
  apps-network:
    driver: bridge